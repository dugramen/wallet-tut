@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
  
  color-scheme: only light;
}

/* @media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
} */

body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
      to bottom,
      transparent,
      rgb(var(--background-end-rgb))
    )
    rgb(var(--background-start-rgb));
}

html, body {
  height: 100%;
  width: 100%;
}

.CardCyan::after {
  background: radial-gradient(circle at center, #0e7490, #06b6d4);
}

.CardCyanBg {
  background: radial-gradient(circle at center, #0e7490, #06b6d4);
  /* @apply rounded-full; */
}

@keyframes squish {
  50% {
    transform: scale(.85);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes fade-out {
  /* 0% {
    opacity: 50%;
  } */
  100% {
    opacity: 0%;
  }
}

@property --card-border-p {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 0%;
}

.CardBorderAnimate {
  --card-border-p: 100%;
}

.CardBorder {
  background: conic-gradient(from -.0turn, rgb(209 213 219 / 0.5) var(--card-border-p), transparent var(--card-border-p)) border-box;
  border: 2px solid transparent;
  
  mask: /*4*/
    linear-gradient(#fff 0 0) padding-box, 
    linear-gradient(#fff 0 0);
  -webkit-mask: /*4*/
     linear-gradient(#fff 0 0) padding-box, 
     linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor; /*5'*/
          mask-composite: exclude; /*5*/

  /* transform: scale(1.2); */
  transition: --card-border-p 1s .5s;
}

.CardBorder.Active {
  --card-border-p: 100%;
}

.CardBorder.Inactive {
  --card-border-p: 0%
}
